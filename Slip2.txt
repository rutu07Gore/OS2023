#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <errno.h>
#include <time.h>
int main(int argc, char *argv[]) {
 if (argc != 2) {
 printf("Usage: %s <filename>\n", argv[0]);
 return 1;
 }
 struct stat fileStat;
 if (stat(argv[1], &fileStat) < 0) {
 fprintf(stderr, "Error accessing file %s: %s\n", argv[1], strerror(errno));
 return 1;
 }
 printf("File: %s\n", argv[1]);
 printf("Inode Number: %ld\n", (long)fileStat.st_ino);
 printf("Number of Hard Links: %ld\n", (long)fileStat.st_nlink);
 printf("File Permissions: ");
 printf((S_ISDIR(fileStat.st_mode)) ? "d" : "-");
 printf((fileStat.st_mode & S_IRUSR) ? "r" : "-");
 printf((fileStat.st_mode & S_IWUSR) ? "w" : "-");
 printf((fileStat.st_mode & S_IXUSR) ? "x" : "-");
 printf((fileStat.st_mode & S_IRGRP) ? "r" : "-");
 printf((fileStat.st_mode & S_IWGRP) ? "w" : "-");
 printf((fileStat.st_mode & S_IXGRP) ? "x" : "-");
 printf((fileStat.st_mode & S_IROTH) ? "r" : "-");
 printf((fileStat.st_mode & S_IWOTH) ? "w" : "-");
 printf((fileStat.st_mode & S_IXOTH) ? "x\n" : "-\n");
 printf("File Size: %ld bytes\n", (long)fileStat.st_size);
 printf("Last Access Time: %s", ctime(&fileStat.st_atime));
 printf("Last Modification Time: %s", ctime(&fileStat.st_mtime));
 return 0;
}






Q2. Write a C program that catches the ctrl-c (SIGINT) signal for the first time and display 
the appropriate message and exits on pressing ctrl-c again.
#include <stdio.h>
#include <signal.h>
#include <stdlib.h>
int count = 0;
void handle_sigint(int signum) {
 if (signum == SIGINT) {
 if (count == 0) {
 printf("\nCaught SIGINT signal. Press Ctrl+C again to exit.\n");
 count++;
 } else {
 printf("\nReceived second SIGINT. Exiting...\n");
 exit(EXIT_SUCCESS);
 }
 }
}
int main() {
 signal(SIGINT, handle_sigint);
 printf("Press Ctrl+C to trigger SIGINT signal.\n");
 while(1) {
 // Program continues running and waiting for SIGINT
 }
 return 0;
}




